#!/usr/bin/env python3

from g2d.git2deploy import G2dDaemon
import sys, os, json, time
REPO_FILE = "/etc/git2deploy/repos.json"
PID_FILE = "/var/run/git2deploy.pid"
def main(arg):
    repodata = {}
    if os.path.exists(REPO_FILE):
        repodata = json.loads(open(REPO_FILE).read())

    daemon = G2dDaemon(PID_FILE, repodata)
    if arg == "start":
        daemon.start()
    elif arg == "stop":
        daemon.stop()
    elif arg == "restart":
        daemon.restart()
    elif arg == "addrepo":
        reponame = input("Enter repository name:")
        repouser = input("Enter github username of repository:")
        secret = input("Enter hook secret token:")
        deploydir = input("Enter directory where to deploy(Leave blank if no deployment necassary):")

        repodata[reponame] = {}
        repodata[reponame]["user"] = repouser
        repodata[reponame]["deploydir"] = deploydir
        repodata[reponame]["secret"] = secret

        if not os.path.exists("/etc/git2deploy"): os.mkdir("/etc/git2deploy")
        rfile = open(REPO_FILE, "w")
        rfile.write(json.dumps(repodata))
        rfile.close()
        print("Restart the git2deploy service for changes to take effect")
    elif arg == "list":
        for repo in repodata: print(repo)
    elif arg == "delrepo":
        reponame = input("Enter repository name:")
        if reponame not in repodata:
            print("This repository does not exist")
            return
        del repodata[reponame]
        rfile = open(REPO_FILE, "w")
        rfile.write(json.dumps(repodata))
        rfile.close()
        print("Restart the git2deploy service for changes to take effect")
    else:
        print("Invalid option")

if __name__ == '__main__':
    main(sys.argv[1])
